# Production Environment Configuration for Research Data Management PaaS
# Copy this file to .env.production and update the values

# =====================================
# Core Application Settings
# =====================================
PAAS_ENVIRONMENT=production
PAAS_DEBUG=false
PAAS_API_HOST=0.0.0.0
PAAS_API_PORT=8000

# =====================================
# Database Configuration (Render PostgreSQL)
# =====================================
DATABASE_URL=postgresql://username:password@hostname:port/database_name
# Example: postgresql://paas_user:your_password@dpg-xxxxx-a.oregon-postgres.render.com:5432/research_paas

# =====================================
# Google APIs Configuration
# =====================================

# Google Gemini API (Required)
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-2.0-flash

# Google OAuth2 (Required for authentication)
GOOGLE_OAUTH_CLIENT_ID=your_google_oauth_client_id.apps.googleusercontent.com
GOOGLE_OAUTH_CLIENT_SECRET=your_google_oauth_client_secret

# Google Drive API (Required for Google Drive integration)
GOOGLE_DRIVE_CREDENTIALS_JSON={"type":"service_account","project_id":"your-project",...}
# Or path to credentials file:
# GOOGLE_DRIVE_CREDENTIALS_PATH=/app/credentials/google-drive-credentials.json

# =====================================
# Vector Search Configuration (Qdrant Cloud)
# =====================================
VECTOR_SEARCH_PROVIDER=qdrant
QDRANT_HOST=your-cluster-id.qdrant.io
QDRANT_API_KEY=your_qdrant_api_key
QDRANT_PORT=6333
VECTOR_COLLECTION_NAME=research_documents
VECTOR_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
VECTOR_SIMILARITY_THRESHOLD=0.7
VECTOR_MAX_RESULTS=50

# =====================================
# Authentication Configuration
# =====================================
AUTH_ENABLED=true
JWT_SECRET_KEY=your_super_secret_jwt_key_min_32_characters
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=60
JWT_REFRESH_TOKEN_EXPIRE_DAYS=30

# Domain restrictions (comma-separated)
ALLOWED_DOMAINS=university.ac.jp,your-domain.ac.jp

# Session configuration
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=lax

# =====================================
# Feature Toggles
# =====================================
PAAS_ENABLE_GOOGLE_DRIVE=true
PAAS_ENABLE_VECTOR_SEARCH=true
PAAS_ENABLE_AUTHENTICATION=true
PAAS_ENABLE_MONITORING=true

# =====================================
# Security Settings
# =====================================

# CORS configuration
CORS_ALLOWED_ORIGINS=https://your-domain.com,https://university.ac.jp
CORS_ALLOW_CREDENTIALS=true

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# =====================================
# Monitoring and Logging
# =====================================
LOG_LEVEL=INFO
LOG_FORMAT=json

# Health check configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_TIMEOUT_SECONDS=30

# Metrics collection
METRICS_ENABLED=true
METRICS_ENDPOINT=/metrics

# =====================================
# File Upload Configuration
# =====================================
MAX_FILE_SIZE_MB=100
SUPPORTED_EXTENSIONS=pdf,csv,json,jsonl,txt
UPLOAD_TEMP_DIR=/tmp/paas_uploads

# =====================================
# Redis Configuration (Optional - for sessions)
# =====================================
REDIS_URL=redis://red-xxxxx:6379
# Or Redis connection details:
# REDIS_HOST=red-xxxxx.oregon-redis.render.com
# REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password

# =====================================
# Email Configuration (Optional - for notifications)
# =====================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM_EMAIL=noreply@your-domain.com
SMTP_TLS=true

# =====================================
# External Service URLs
# =====================================

# Your application URL (for OAuth redirects)
APP_BASE_URL=https://your-app.onrender.com

# OAuth redirect URI
OAUTH_REDIRECT_URI=https://your-app.onrender.com/auth/callback

# =====================================
# Backup Configuration
# =====================================
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# =====================================
# Performance Configuration
# =====================================

# Database connection pool
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# Vector search cache
VECTOR_CACHE_ENABLED=true
VECTOR_CACHE_SIZE=1000
VECTOR_CACHE_TTL_SECONDS=3600

# =====================================
# Development/Testing Overrides
# =====================================
# Uncomment for development testing on production-like setup

# PAAS_DEBUG=true
# AUTH_ENABLED=false
# RATE_LIMIT_ENABLED=false
# ALLOWED_DOMAINS=localhost,127.0.0.1

# =====================================
# Render-specific Environment Variables
# =====================================
# These are typically set automatically by Render:

# PORT=8000  # Set by Render
# PYTHON_VERSION=3.11  # Set in render.yaml
# NODE_ENV=production  # Set by Render

# =====================================
# Additional Notes
# =====================================

# 1. JWT_SECRET_KEY should be a strong, randomly generated key
#    Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"

# 2. Google OAuth2 setup:
#    - Go to Google Cloud Console
#    - Enable OAuth2 API
#    - Create OAuth2 client ID
#    - Add authorized domains and redirect URIs

# 3. Qdrant Cloud setup:
#    - Create cluster in Tokyo region for best performance
#    - Use the provided host and API key
#    - Collection will be created automatically

# 4. Render PostgreSQL:
#    - Database URL is provided automatically
#    - No additional configuration needed

# 5. Security considerations:
#    - Never commit this file with real credentials
#    - Use Render's environment variable dashboard for secrets
#    - Rotate keys regularly

# 6. Performance tuning:
#    - Adjust pool sizes based on concurrent users
#    - Monitor vector search cache hit rates
#    - Consider CDN for static files